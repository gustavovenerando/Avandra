Classe: Product
Descricao: Extrair as infos basicas dos produtos dos sites
Informacoes extraidas dos produtos: 
{
    _id: abc,
    name: Placa de Vídeo RTX 4070 1-Click OC 2X Black PCI-E Galax NVIDIA GeForce, 12GB GDDR6X, DLSS, G-Sync, Ray Tracing, 192 bits - 47NOM7MD8DDF,
    url: https://www.kabum.com.br/produto/473907/placa-de-video-rtx-4070-1-click-oc-2x-black-pci-e-galax-nvidia-geforce-12gb-gddr6x-dlss-g-sync-ray-tracing-192-bits-47nom7md8ddf,
    site: Kabum,
    tipo: GPU
}

Classe: Catalogo
Descricao: Montar a tabela "catalog" com informações detalhadas sobre os produtos.
Informacoes detalhadas extraidas dos produtos: 
{
    marca: GALAX,
    modelo: 47NOM7MD7QOC,
    garantia: 12 meses de garantia,
    vram: 12gb,
    sgram: GDDR6X,
    familia: RTX 4070,
}

MySQL table: catalog
Model final da tabela catalog:
{
    _id: abc,
    name: Placa de Vídeo RTX 4070 1-Click OC 2X Black PCI-E Galax NVIDIA GeForce, 12GB GDDR6X, DLSS, G-Sync, Ray Tracing, 192 bits - 47NOM7MD8DDF,
    url: https://www.kabum.com.br/produto/473907/placa-de-video-rtx-4070-1-click-oc-2x-black-pci-e-galax-nvidia-geforce-12gb-gddr6x-dlss-g-sync-ray-tracing-192-bits-47nom7md8ddf,
    site: Kabum,
    tipo: GPU,
    marca: GALAX,
    modelo: 47NOM7MD7QOC,
    garantia: 12 meses de garantia,
    vram: 12gb,
    sgram: GDDR6X,
    familia: RTX 4070,
}

Cron: Precos dos produtos
Descricao: Ler tabela 'catalog' e coletar informacoes dos precos dos produtos preenchendo
tabela 'product.price'
MySQL table: gpu.product.price
Colunas a adicionar na tabela: D
{
    _id: ...,
    catolog_id: abc, 
    pix: R$ 3.999,99,
    parcelado: R$ 4.210,52,
    createdAt: x
}

Proximos passsos:
- Salvar no banco utilizando Sequelize
- Melhorar processamento utilizando threads

Pontos a melhorar:
- Funcao primeiro define quantidade de paginas um site por vez antes de comecar o scrapping, poderia fazer todos os sites simultaneamente.
  Outro problema desta funcao(getNums) eh o codigo duplicado com extracPageData.
- Melhorar como informacoes comuns evitem de ser pasados entre funcoes, como o caso de site: kabum, tipo: gpu e baseUrl, evitando que passem por funcoes de processamento de selectors como extractProductData e getProductInfoSelelectors
- Melhorar processamento, utilizar threads para processar

Gera url de todas as paginas das "vitrines" ===> De 10 em 10 pags, para cada pagina, gera os selectors da pagina (de acordo com a quantidade de itens que a pagina possui) ===> De 50 em 50, extrai os itens da pagina
